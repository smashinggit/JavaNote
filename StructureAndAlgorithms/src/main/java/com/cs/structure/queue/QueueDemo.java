package com.cs.structure.queue;

/**
 * @author ：chensen
 * @date ：Created in 2019/4/19 16:50
 * @description：队列
 * @modified By：
 * @version: $
 * <p>
 * 队列跟栈非常相似，支持的操作也很有限
 * 最基本的操作也是两个：
 * 入队 enqueue()，放一个数据到尾部
 * 出队 dequeue()，从队列头部取一个元素
 * 队列跟栈一样，也是一种操作受限的线性表数据结构。
 * 队列跟栈一样，也是一种抽象的数据结构
 * 用数组实现的队列叫作顺序队列
 * 用链表实现的队列叫作链式队列。
 * <p>
 * 阻塞队列其实就是在队列基础上增加了阻塞操作。
 * 在队列为空的时候，从队头取数据会被阻塞。因为此时还没有数据可取，直到队列中有了数据才能返回
 * 如果队列已经满了，那么插入数据的操作就会被阻塞，直到队列中有空闲位置后再插入数据，然后再返回
 * 使用阻塞队列，轻松实现一个“生产者 - 消费者模型”
 * <p>
 * 线程安全的队列我们叫作并发队列。最简单直接的实现方式是直接在 enqueue()、dequeue() 方法上加锁。
 * 但是锁粒度大并发度会比较低，同一时刻仅允许一个存或者取操作
 * 实际上，基于数组的循环队列，利用 CAS 原子操作。可以实现非常高效的并发队列。这也是循环队列比链式队
 * 列应用更加广泛的原因
 */
public class QueueDemo {


}
